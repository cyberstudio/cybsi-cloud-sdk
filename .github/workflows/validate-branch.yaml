name: Validate
on: [ push ]

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8' ] # use minimum supported version
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pip install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - name: Run lint
        run: make lint
  build-docs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r docs/requirements.txt
      - name: Run building docs
        run: make build-docs
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pip install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - name: Run test
        run: make test